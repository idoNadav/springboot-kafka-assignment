version: "3.8"

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.6
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9092:9092"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  order-service:
    build: ./order-service
    environment:
      - SERVER_PORT=8080
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - APP_TOPICS_ORDERS=orders
      - APP_TOPICS_INVENTORY_RESULTS=inventory-results
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - redis

  inventory-service:
    build: ./inventory-service
    environment:
      - SERVER_PORT=8081
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - APP_TOPICS_ORDERS=orders
      - APP_TOPICS_INVENTORY_RESULTS=inventory-results
    ports:
      - "8081:8081"
    depends_on:
      - kafka

  notification-service:
    build: ./notification-service
    environment:
      - SERVER_PORT=8082
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - APP_TOPICS_ORDERS=orders
    ports:
      - "8082:8082"
    depends_on:
      - kafka
      - redis
